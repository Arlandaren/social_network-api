package utils

import (
	"fmt"
	"os"
	"time"
	"strings"
	"github.com/gin-gonic/gin"

	"github.com/dgrijalva/jwt-go"
	"github.com/joho/godotenv"
)

func NewJWTToken(existingUserName string,existingUserId uint, c *gin.Context) (string,error) {
	expirationTime := time.Now().Add(60 * time.Minute)
	claims := struct {
		UserID uint `json:"user_id"`
		UserName string `json:"user_name"`
		jwt.StandardClaims
	}{
		UserID: existingUserId,
		UserName: existingUserName,
		StandardClaims: jwt.StandardClaims{
			Subject:   existingUserName,
			ExpiresAt: expirationTime.Unix(),
		},
	}

	err := godotenv.Load()
	if err != nil {
		return "",err
	}
	token := jwt.NewWithClaims(jwt.SigningMethodHS256, claims)
	signedString, err := token.SignedString([]byte(os.Getenv("JWT_KEY")))
	if err != nil {
		return "",err
	}
	c.SetCookie("token", signedString, int(expirationTime.Unix()), "/", strings.Split(os.Getenv("SERVER_ADDRESS"), ":")[0], false, true)
	fmt.Println(signedString)
	return signedString,nil
}
